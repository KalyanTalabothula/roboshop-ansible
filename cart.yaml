
- name: create cart server
  hosts: cart
  become: yes
  tasks:
  - name: disable old-version and enable New nodejs
    ansible.builtin.shell: "dnf module disable nodejs -y && dnf module enable nodejs:20 -y"

  - name: install Node js
    ansible.builtin.package: 
      name: nodejs
      state: present

  - name: Adding user with a name of roboshop
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory 
    ansible.builtin.file:
      path: /app
      state: absent # You're deploying a new version of a web app. You donâ€™t want any old .jar, .log, or .tmp files left inside /app.

  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download cart application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/cart.zip
      dest: /tmp

  - name: exact cart application
    ansible.builtin.unarchive:
      src: /tmp/cart.zip
      dest: /app
      remote_src: yes

  - name: Install npm dependencies
    ansible.builtin.command: npm install
    args: 
      chdir: /app

  - name: copy cart . service 
    ansible.builtin.copy:
      src: cart.service
      dest: /etc/systemd/system/cart.service

  - name: daemon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true



  - name: start and enable cart
    ansible.builtin.service:
      name: cart
      state: restarted
      enabled: yes