
- name: creating shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: Installing maven
    ansible.builtin.package:
      name: maven
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop
      
  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: creating a /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: downloading the shipping application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
      dest: /tmp

  - name: extract shipping application 
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes
  
  - name: Installing dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

   # In Java-based apps like shipping, a .jar file is created during build, and the name often includes a version like shipping-1.0.jar.
   # To make it easier to manage and deploy, we rename it to a fixed name like shipping.jar.
   # In Node.js apps like catalogue, we don’t have a .jar — we run the app directly from code using node server.js, so no need to rename anything. 
    
  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping . service 
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload 
    ansible:builtin.systemd_service:
      daemon_reload: true

  - name: Install mysql client
    ansible.builtin.package:
      name: install mysql
      state: present 
  
  - name: check cities schema exists or not
    ansible.builtin.command:  mysql -h mysql.kalyanu.xyz -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
    register: schema

  - name: print output
    ansible.builtin.debug:
      msg: "schema output: {{schema}}"

  - name: load cities data
    ansible.builtin.shell: "mysql -h mysql.kalyanu -uroot -p{{mysql_password}}  < /app/schema/shipping.sql"
    when: schema.stdout != "1"

  - name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: yes