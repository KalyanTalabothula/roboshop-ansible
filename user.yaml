
- name: create user server
  hosts: user
  become: yes
  tasks:
  - name: disable old-version and enable New nodejs
    ansible.builtin.shell: "dnf module disable nodejs -y && dnf module enable nodejs:20 -y"

  - name: install Node js
    ansible.builtin.package: 
      name: nodejs
      state: present

  - name: Adding user with a name of roboshop
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory 
    ansible.builtin.file:
      path: /app
      state: absent # You're deploying a new version of a web app. You donâ€™t want any old .jar, .log, or .tmp files left inside /app.

  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download user application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: exact user application
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: Install npm dependencies
    ansible.builtin.command: npm install
    args: 
      chdir: /app

  - name: copy user . service 
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: daemon reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: Install mongodb client
    ansible.builtin.package:
      name: mongodb-org
      state: present
  
  - name: Get the categories count
    ansible.builtin.command: mongo --host mongodb.kalyanu.xyz --quiet --eval "db = db.getSiblingDB('users'); db.users.count()"
    register: user_count 

  # - name: print the count
  #   ansible.builtin.debug:
  #     msg: "product count : {{user_count}}"

  - name: load user data
    ansible.builtin.command: mongo --host mongodb.kalyanu.xyz </app/schema/user.js
    when: user_count.stdout == " 0 " # keep double quotes

  - name: start and enable user
    ansible.builtin.service:
      name: user
      state: restarted
      enabled: yes