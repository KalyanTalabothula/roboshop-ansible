- name: creating shipping component
  hosts: shipping
  become: yes
  vars:
    mysql_password: RoboShop@1

  tasks:
    - name: Install Maven
      ansible.builtin.package:
        name: maven
        state: present

    - name: Create roboshop user
      ansible.builtin.user:
        name: roboshop

    - name: Remove /app directory if exists
      ansible.builtin.file:
        path: /app
        state: absent

    - name: Create /app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download shipping app
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip 
        dest: /tmp/shipping-v3.zip

    - name: Extract shipping app
      ansible.builtin.unarchive:
        src: /tmp/shipping-v3.zip
        dest: /app
        remote_src: yes

    - name: Build application using Maven
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: Rename jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: Copy shipping service file
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Install MySQL client
      ansible.builtin.package:
        name: mysql
        state: present 

    - name: Check if 'cities' schema exists
      ansible.builtin.command: >
        mysql -h mysql.kalyanu.xyz -uroboshop -pRoboShop@1 -sN -e 
        "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema
      ignore_errors: yes  # Optional: to allow recovery if MySQL access fails

    - name: Print schema output
      ansible.builtin.debug:
        msg: "Schema output: {{ schema.stdout }}"

    - name: Load cities schema if not exists
      ansible.builtin.shell: >
        mysql -h mysql.kalyanu.xyz -uroboshop -p{{ mysql_password }} < /app/schema/shipping.sql
      when: schema.stdout != "1"

    - name: Start and enable shipping service
      ansible.builtin.service:
        name: shipping
        state: restarted
        enabled: yes
